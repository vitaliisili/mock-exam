version: "3.2"

services:
  postgres-db:
    container_name: "mock-exam-service-database"
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
     # POSTGRES_PASSWORD_FILE: /run/secrets/db_password <-- alternative for POSTGRES_PASSWORD (to use with docker secrets)
    ports:
      - "5432:5432"
    volumes:
      - ./db-data/postgres-data:/var/lib/postgresql/data/
    restart: always

  backup-db:
    image: prodrigestivill/postgres-backup-local
    container_name: backup-db
    restart: always
    volumes:
      - ./db-data/backups:/backups
    links:
      - postgres-db
    depends_on:
      - postgres-db
    environment:
       POSTGRES_HOST: postgres-db
       POSTGRES_DB: $DB_NAME
       POSTGRES_USER : $DB_USERNAME
       POSTGRES_PASSWORD: $DB_PASSWORD
       BACKUP_SUFFIX: .sql.gz
      # POSTGRES_PASSWORD_FILE: /run/secrets/db_password <-- alternative for POSTGRES_PASSWORD (to use with docker secrets)
       POSTGRES_EXTRA_OPTS: -Z6 --schema=public --blobs
       SCHEDULE: "@every 0h30m0s"
       BACKUP_KEEP_MINS: 180
       BACKUP_KEEP_DAYS: 7
       BACKUP_KEEP_WEEKS: 4
       BACKUP_KEEP_MONTHS: 6
       HEALTHCHECK_PORT: 8084

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    depends_on:
      - postgres-db
    ports:
      - '8383:8080'

  mock-exam-service:
    build:
      context: mock-exam-service
      dockerfile: Dockerfile
    container_name: mock-exam-service
    image: vitaliisili/mock-exam-service
    depends_on:
      - postgres-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/mock-exam
      SPRING_DATASOURCE_USERNAME: $DB_USERNAME
      SPRING_DATASOURCE_PASSWORD: $DB_PASSWORD
    ports:
      - "9002:9002"
    restart: on-failure

  mock-exam-ui:
    build:
      context: mock-exam-ui
      dockerfile: Dockerfile
    container_name: mock-exam-ui
    image: vitaliisili/mock-exam-ui
    depends_on:
      - mock-exam-service
    ports:
      - "8080:80"
    restart: always
